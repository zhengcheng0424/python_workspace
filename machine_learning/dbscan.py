"""
DBSCAN是一种基于密度的聚类算法，用于发现任意形状的簇。
比如，异常检测。
1. **英文全称**
   - DBSCAN的英文全称是“Density - Based Spatial Clustering of Applications with Noise”，即“具有噪声的基于密度的空间聚类应用”。

2. **基本原理**
   - **核心概念：密度可达与密度相连**
     - DBSCAN基于数据点的密度。如果一个数据点的邻域（以该点为中心，指定半径的圆形区域）内包含的点的数量超过某个阈值（最小点数），那么这个点被称为核心点。
     - 从一个核心点出发，如果另一个点在其邻域内，那么这个点是从核心点密度可达的。如果存在一系列的点，使得点A到点B是通过这些点依次密度可达的，那么点A和点B是密度相连的。
   - **聚类过程**
     - 算法从任意一个未被访问的核心点开始，找到所有从这个核心点密度可达的点，这些点构成一个聚类。
     然后，寻找下一个未被访问的核心点，重复上述过程，直到所有核心点都被访问。不属于任何聚类的点被视为噪声点。
   - **示例**
     - 假设我们有一组二维平面上的点代表城市中的店铺位置。如果以某店铺为中心，半径为1公里的范围内有至少5家店铺，那么这个店铺就是核心点。
     从这个核心点出发，能找到其他密度可达的店铺，这些店铺就可以被划分到同一个聚类中，代表一个商业区域。
     而那些孤立的、周围没有足够店铺的点可能被视为噪声点，比如在偏远地区的一家小店。

3. **特点**
   - **能发现任意形状的簇**：与K - Means等基于距离的聚类算法不同，DBSCAN可以发现非球形的聚类，例如像“S”形或环形的簇。
   这使得它在处理复杂形状的数据集时更具优势。
   - **对噪声数据不敏感**：能够有效地识别出数据中的噪声点，并且不会将噪声点强制划分到某个聚类中，这有助于提高聚类结果的准确性。
   - **不需要预先指定聚类数量**：不像K - Means需要提前确定聚类的数量k，DBSCAN是根据数据的密度自动确定聚类的数量，这在对数据分布了解较少的情况下非常有用。

4. **应用场景**
   - **地理信息系统（GIS）**：在地图数据中识别城市区域、森林群落等。例如，在城市规划中，可以用DBSCAN根据建筑物的分布密度来划分不同的功能区域。
   - **图像识别**：对图像中的物体进行聚类。例如，在医学图像中，对细胞进行聚类分析，以识别不同的细胞群落或异常细胞（将异常细胞作为噪声点）。
   - **客户细分**：在商业领域，根据客户的购买行为、地理位置等多种因素进行聚类，以更好地了解客户群体，挖掘潜在市场。
"""

from sklearn.cluster import DBSCAN
from sklearn.datasets import make_moons
import matplotlib.pyplot as plt

# 创建数据集
x, _ = make_moons(n_samples=300, noise=0.1, random_state=42)

# 创建DBSCAN模型
dbscan = DBSCAN(eps=0.2, min_samples=5)

# 训练模型
labels = dbscan.fit_predict(x)

# 可视化结果
plt.scatter(x[:, 0], x[:, 1], c=labels, cmap='viridis')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.title('DBSCAN Clustering')
plt.show()
